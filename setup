#!/bin/bash
clear

#color
RED='\033[0;31m'
YELLOW='\033[0;93m'
BULE='\033[0;94m'
MAGENTA='\033[0;35m'
NC='\033[0m'

DEPENDENCY_LIST=$(pwd)/dependency

#check dependency for build aur package in dependency
echo -e "${MAGENTA}Installing dependencies...${NC}"
while read line; do
  if pacman -Qs $line > /dev/null ; then
    echo "The package $line is installed"
  else
    sudo pacman -Sy $line --noconfirm
  fi
done < $DEPENDENCY_LIST

##Create directory
mkdir -p arch-root aur-package local-repo
CHROOT=arch-root
##Check create repo or not yet
echo -e "${MAGENTA}Create cumtom repo${NC}"
read -p "+ Repo name: " REPONAME
FINDREPO=$(find local-repo/$REPONAME.db | awk -F"." '{printf $1}')
if [[ "local-repo/$REPONAME" == "$FINDREPO" ]] ;then
    echo -e "${YELLOW}==>>${NC}Repo already exists."
else
    repo-add local-repo/"$REPONAME".db.tar.xz #Create repo db
    if [[ -f local-repo/$REPONAME.db ]] ; then
        echo -e "${YELLOW}==>>${NC}Created success."
    else
        echo -e "${YELLOW}==>>${NC}Created Fail."
    fi
fi

##create fakeroot for build aur package
echo 
echo -e "${YELLOW}Create fakeroot.${NC}"
function checkpassword(){
sudo -k
read -s -p "+ Password: " PASSWORD
echo
if sudo -lS &> /dev/null << EOF
$PASSWORD
EOF
then
echo
[[ -d "$CHROOT/root" ]] || echo "$PASSWORD" | mkarchroot -C /etc/pacman.conf "$CHROOT/root" \
    bash bzip2 coreutils cryptsetup device-mapper dhcpcd diffutils e2fsprogs \
    file filesystem findutils gawk gcc-libs gettext glibc grep gzip inetutils \
    iproute2 iputils less licenses linux logrotate man-db man-pages mdadm \
    pacman pciutils perl procps-ng psmisc s-nail sed shadow sysfsutils \
    systemd-sysvcompat tar texinfo usbutils util-linux which base-devel
else
  echo -e "${RED}Incorrect Password. Please try again.${NC}"
  checkpassword
fi
}
checkpassword